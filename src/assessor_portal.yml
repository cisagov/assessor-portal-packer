---
- hosts: all
  name: Install and configure Assessor Portal Docker composition
  become: yes
  become_method: sudo
  roles:
    - role: assessor_portal
      vars:
        bucket_name: "{{ build_bucket }}"
  tasks:
    # We use cloud-init scripts in cisagov/cool-assessment-terraform to
    # set Docker's backing file system to a persistent volume.  It would
    # cause problems if the Docker service were to start before cloud-init
    # finished, so we modify the Docker unit file to wait until cloud-final
    # has completed.  We include multi-user.service in here also to avoid
    # a systemd dependency cycle.
    - name: Ensure Docker starts after multi-user and cloud-final complete
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/docker.service
        backrefs: yes
        # The exclamation mark forces us to quote the string because
        # it is a special character in YAML.
        #
        # The (?!...) jazz is a negative look-ahead assertion.  See
        # here, for example:
        # https://docs.python.org/3/library/re.html
        regexp: '^After=(.*)(?! multi\-user\.target cloud\-final\.service)$'
        line: After=\1 multi-user.target cloud-final.service

#   - name: Configure Assessor Portal composition
#     block:
#       - name: Set up assessor-portal systemd service
#         block:
#           - name: Install systemd service file for assessor-portal
#             ansible.builtin.copy:
#               mode: 0644
#               src: assessor-portal.service
#               dest: /etc/systemd/system/assessor-portal.service
#           - name: Reload systemd daemon
#             ansible.builtin.systemd:
#               daemon_reload: true
#           - name: >
#               Enable assessor-portal systemd service to start
#               on boot
#             ansible.builtin.systemd:
#               name: assessor-portal.service
#               enabled: true
#         when:
#           - ansible_service_mgr == "systemd"
#   - name: Create Assessor Portal desktop shortcut for VNC user
#     block:
#       - name: Create VNC user Desktop directory
#         ansible.builtin.file:
#           path: /home/{{ vnc_username }}/Desktop
#           state: directory
#           mode: 0755
#           owner: "{{ vnc_username }}"
#           group: "{{ vnc_username }}"
#       - name: Create Assessor Portal desktop shortcut for VNC user
#         ansible.builtin.copy:
#           src: assessor-portal-shortcut.desktop
#           dest: >
#             /home/{{ vnc_username }}/Desktop/assessor-portal-shortcut.desktop
#           mode: 0755
#           owner: "{{ vnc_username }}"
#           group: "{{ vnc_username }}"
# vars:
#   vnc_username: "{{ lookup('aws_ssm', '/vnc/username') }}"
